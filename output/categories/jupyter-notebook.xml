<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Marine Data Science (Posts about Jupyter notebook)</title><link>https://madhatter106.github.io/</link><description></description><atom:link href="https://madhatter106.github.io/MarineDataScience/categories/jupyter-notebook.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2017 &lt;a href="mailto:erdemk@protonmail.com"&gt;Erdem Karaköylü&lt;/a&gt; </copyright><lastBuildDate>Wed, 19 Jul 2017 16:57:18 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>XARRAY &amp; GEOVIEWS A new perspective on oceanographic data - part I</title><link>https://madhatter106.github.io/MarineDataScience/posts/xarray-geoviews-a-new-perspective-on-oceanographic-data-part-i/</link><dc:creator>Erdem Karaköylü</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;With this post I explore an alternative to ol' numpy; &lt;a href="http://xarray.pydata.org/en/stable/index.html"&gt;xarray&lt;/a&gt;. Numpy is still running under the hood but this very handy library applies the &lt;a href="http://pandas.pydata.org/"&gt;pandas&lt;/a&gt; concept of labeled dimension to large N-dimension arrays prevalent in scientific computing. The result is an ease of manipulation of dimensions without having to guess or remember what they correspond to. Moreover, xarray plays nicely with two other relatively new libraries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://dask.pydata.org/en/latest/"&gt;dask&lt;/a&gt;, which enables out of core computation so that memory availability becomes much less an issue with large data sets; &lt;/li&gt;
&lt;li&gt;&lt;a href="http://geo.holoviews.org/"&gt;GeoViews&lt;/a&gt;, a library sitting on top of &lt;a href="http://holoviews.org/"&gt;HoloViews&lt;/a&gt;. The latter eases the burden of data visualization by offering an unusual approach that does away with step-by-step graphical coding and allows the user to concentrate how the data organization instead. This results in a substantial reduction code written, which makes data analysis much cleaner and less bug-prone. GeoViews sits on top of the visualization package HoloViews, with an emphasis on geophysical data. It's also my first good-bye to the aging (10+ years) matplotlib library. It'll still be handy now and then, but it's time to try new things. &lt;p&gt;&lt;a href="https://madhatter106.github.io/MarineDataScience/posts/xarray-geoviews-a-new-perspective-on-oceanographic-data-part-i/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>Jupyter notebook</category><category>ocean color</category><category>xarray</category><guid>https://madhatter106.github.io/MarineDataScience/posts/xarray-geoviews-a-new-perspective-on-oceanographic-data-part-i/</guid><pubDate>Mon, 20 Feb 2017 16:16:55 GMT</pubDate></item></channel></rss>